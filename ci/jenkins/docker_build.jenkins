#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_akafer', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        stage("create docker image for app,nginx") {
            steps {
                echo " ============== start building image =================="
                dir ('.') {
                	sh '''
                	docker build -t akafer/esmo_nginx -f  ./ci/nginx/Dockerfile .
                	docker build -t akafer/esmo_app -f  ./ci/Dockerfile .
                	'''
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker push akafer/esmo_app
                docker rmi akafer/esmo_app
                ocker push akafer/esmo_nginx
                docker rmi akafer/esmo_nginx
                '''
            }
        }
        stage("copy docker_compose file") {
            steps {
                echo " ============== copy docker-compose file =================="
                dir ('./ci') {
                    sh '''
                    scp docker-compose.production.yaml root@ub1:/root/app/IAS_ESMO_NEW/docker-compose.yaml
                    scp createsuperuser.sh root@ub1:/root/app/IAS_ESMO_NEW/createsuperuser.sh
                    '''

                }
            }
        }
        stage("renew server") {
            steps {
                echo " ============== renew server =================="
                sh 'ssh root@ub1 "cd /root/app/IAS_ESMO_NEW && docker-compose down -v && docker rmi akafer/esmo_app && docker rmi akafer/esmo_nginx && docker-compose up -d"'
            }
        }
        stage("migration&collectstatic") {
            steps {
                echo " ============== migration&collectstatic =================="
                sh 'ssh root@ub1 "cd /root/app/IAS_ESMO_NEW && docker exec esmo_app python manage.py migrate --noinput && docker exec esmo_app python manage.py collectstatic --no-input"'
            }
        }
        stage("createsuperuser") {
            steps {
                echo " ============== createsuperuser =================="
                sh 'ssh root@ub1 "cd /root/app/IAS_ESMO_NEW && while read LINE; do export "$LINE"; done < ./.env && ./createsuperuser.sh"'
            }
        }
    }
}